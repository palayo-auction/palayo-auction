name: Java CI with Gradle

on:
  push:
    branches:
      - feat/**
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle Wrapper에 실행 권한 부여
      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      # 4. Gradle로 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

  deploy:
    runs-on: ubuntu-latest
    needs: build  # build 작업이 성공해야 deploy 작업이 실행됨

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. EC2에 JAR 파일 복사
      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/palayo-0.0.1-SNAPSHOT.jar"
          target: "/home/${{ secrets.EC2_USER }}/app"

      # 4. Spring Boot 애플리케이션 재시작
      - name: Restart Spring Boot App
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
#             기존 실행 중인 Spring Boot 앱 종료
            pkill -f 'java -jar' || true
#             새로 빌드한 JAR 파일 실행
            java -jar /home/ubuntu/app/palayo-0.0.1-SNAPSHOT.jar

version: '3.8'

services:
  ## --- Elasticsearch + Kibana ---
  es:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: es
    environment:
      - node.name=es-node
      - cluster.name=search-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.4
    container_name: kibana
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - "5601:5601"
    depends_on:
      - es

  redis:
    image: redis:7.2
    container_name: noti
    ports:
      - 6380:6380
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  mongo:
    image: mongo:8.0.8
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db

  ## --- Prometheus + Grafana + Loki + Promtail ---
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./grafana_monitoring_stack_docker/conf/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    command: [ "--config.file=/etc/prometheus/prometheus.yml" ]
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus

  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: always
    ports:
      - "3100:3100"
    command: [ "--config.file=/etc/loki/loki-config.yaml" ]
    volumes:
      - ./grafana_monitoring_stack_docker/conf/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./data/loki:/loki

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    restart: always
    volumes:
      - ./logs:/logs
      - ./grafana_monitoring_stack_docker/conf/promtail-config.yml:/etc/promtail/config.yml
      - ./scripts/promtail-entrypoint.sh:/entrypoint.sh
    entrypoint: [ "sh", "/entrypoint.sh" ]
    depends_on:
      - loki

volumes:
  es-data:
    driver: local
  redis-data:
    driver: local
  mongo-data:
    driver: local